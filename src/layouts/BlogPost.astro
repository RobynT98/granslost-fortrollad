---
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import Header from '../components/Header.astro';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage, heroAlt } = Astro.props;

// Bygg alt-text fallback
const altText = heroAlt ?? `${title} – omslagsbild`;
---

<html lang="sv">
  <head>
    <BaseHead title={title} description={description} image={heroImage ?? undefined} />
    <style>
      main {
        width: min(100%, 72rem);
        margin-inline: auto;
      }
      .hero {
        margin: 0;
      }
      .hero img {
        display: block;
        width: 100%;
        height: auto;
        border-radius: 12px;
        box-shadow: var(--box-shadow);
      }
      .prose {
        max-width: 70ch;
        margin: 0 auto;
        padding: 1rem;
        color: rgb(var(--gray-dark));
      }
      .post-header {
        text-align: center;
        padding: 1rem 0 0.5rem;
      }
      .post-title {
        margin: .25rem 0 .75rem;
        line-height: 1.1;
      }
      .meta {
        color: rgb(var(--gray));
        margin-bottom: .25rem;
      }
      .updated {
        font-style: italic;
        opacity: .85;
      }
      hr {
        margin: 1rem auto 1.5rem;
        max-width: 12rem;
        border: 0;
        border-top: 2px solid rgba(var(--black), .08);
      }
      @media (max-width: 720px) {
        .prose { padding: .75rem }
      }
    </style>
  </head>

  <body>
    <Header />
    <main>
      <article aria-labelledby="post-title">
        {heroImage && (
          <figure class="hero">
            <Image width={1280} height={640} src={heroImage} alt={altText} />
          </figure>
        )}

        <div class="prose">
          <header class="post-header">
            <p class="meta">
              <time datetime={new Date(pubDate).toISOString()}>
                <FormattedDate date={pubDate} />
              </time>
              {updatedDate && (
                <span class="updated">
                  {' · '}Uppdaterad{' '}
                  <time datetime={new Date(updatedDate).toISOString()}>
                    <FormattedDate date={updatedDate} />
                  </time>
                </span>
              )}
            </p>

            <h1 id="post-title" class="post-title">{title}</h1>
            <hr />
          </header>

          <slot />
        </div>
      </article>
    </main>
    <Footer />
  </body>
</html>
